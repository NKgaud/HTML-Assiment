{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Calibri;}{\f1\fmodern\fprq1\fcharset0 Courier New;}{\f2\fswiss\fprq2\fcharset0 Segoe UI;}{\f3\froman\fprq2\fcharset0 Times New Roman;}{\f4\fswiss\fprq2\fcharset0 Arial;}{\f5\fmodern\fprq1\fcharset0 Consolas;}{\f6\fnil\fprq2\fcharset0 Poppins;}{\f7\froman\fcharset0 inherit;}{\f8\fmodern\fprq1\fcharset0 Source Code Pro;}{\f9\froman\fcharset0 var;}{\f10\fnil\fcharset1 Cambria Math;}{\f11\froman\fprq2\fcharset0 Georgia;}{\f12\fnil\fprq2\fcharset0 Nunito Sans;}{\f13\fnil\fcharset0 Calibri;}{\f14\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue0;\red39\green50\blue57;\red128\green0\blue0;\red229\green0\blue0;\red0\green0\blue255;\red205\green49\blue49;\red4\green81\blue165;\red0\green128\blue0;\red9\green134\blue88;\red163\green21\blue21;\red34\green34\blue34;\red255\green255\blue255;\red75\green79\blue88;\red68\green85\blue136;\red47\green50\blue53;\red170\green170\blue170;\red153\green0\blue115;\red0\green134\blue179;\red119\green119\blue119;\red247\green247\blue250;\red255\green0\blue0;\red27\green27\blue27;\red129\green31\blue63;\red31\green55\blue99;\red7\green20\blue183;\red154\green110\blue58;\red221\green74\blue104;\red153\green153\blue153;\red3\green150\blue36;\red32\green33\blue36;\red0\green102\blue153;\red61\green61\blue78;\red199\green37\blue78;\red249\green242\blue244;\red86\green156\blue214;\red212\green212\blue212;\red220\green220\blue220;\red51\green51\blue51;\red96\green139\blue78;\red206\green145\blue120;\red181\green206\blue168;}
{\stylesheet{ Normal;}{\s1 heading 1;}{\s2 heading 2;}{\s3 heading 3;}}
{\*\generator Riched20 10.0.22621}{\*\mmathPr\mmathFont10\mwrapIndent1440 }\viewkind4\uc1 
\pard\widctlpar\sa160\sl252\slmult1\qc\b\f0\fs40\lang16393 Module 6) JAVASCRIPT BASIC & DOM\par
\fs28\par

\pard 
{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa160\sl252\slmult1 What is JavaScript?\par

\pard\cbpat12\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\f1 Ans.\cf1\b0\fs21  \f0\fs28 Javascript is a lightweight, cross-platform, and interpreted scripting language. it is well-known for the development webpages,\par
many non- browser environments also use it.\par
\par
javascript is used to make webpages interactive (e.g., having complex animations, clickable buttons, popup menus, etc.)\par
\par
javascript can be used for client side development as well as server side developments\par
\par
javascript contains a standard library of object like array, date, and math and core  set of language element like operator\par
control structure and statements.\par

\pard\widctlpar\li360\sa160\sl252\slmult1\cf0\b\par

\pard\widctlpar\fi-360\li720\sa160\sl252\slmult1 2.\tab What is the use of is NaN function?\par

\pard\cbpat12\widctlpar\s2\sb150\sa150 Ans.\b0   \par
\b          \cf1\f2 Definition and Usage\par

\pard\cbpat12{\pntext\f14\'B7\tab}{\*\pn\pnlvlblt\pnf14\pnindent0{\pntxtb\'B7}}\s2\fi-360\li720\sb150\sa150\b0 In javaScript Nan is short for \ldblquote Not-a-Number\rdblquote .\par
{\pntext\f14\'B7\tab}The is Nan() method returns true if a value is NaN.\par
{\pntext\f14\'B7\tab}The is NaN() method converts the value to a number before testing it.\par

\pard\cbpat12\widctlpar\s2\sb150\sa150\par

\pard\cbpat12\widctlpar\s2\fi-360\li720\sb150\sa150\cf0\b\f3 3.\tab\f0 What is negative Infinity?\par

\pard\cbpat12\widctlpar\sa150 Ans.\cf2\expndtw2\b0\f4\fs26  The negative infinity in JavaScript is a constant value which is used to represent a value which is the lowest available. This means that no other number is lesser than this value. It can be generated using a self-made function or by an arithmetic operation.\par

\pard\cbpat12\widctlpar\b Note:\b0\~JavaScript shows the NEGATIVE_INFINITY value as -Infinity.\par
\b Negative infinity\b0\~is different from mathematical infinity in the following ways:\par

\pard\cbpat12 
{\pntext\f4 1.\tab}{\*\pn\pnlvlbody\pnf4\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li1080 Negative infinity results in 0 when divided by any other number.\par
{\pntext\f4 2.\tab}When divided by itself or positive infinity, negative infinity return NaN\par
{\pntext\f4 3.\tab}Negative infinity, when divided by any positive number (apart from positive infinity) is negative infinity.\par
{\pntext\f4 4.\tab}Negative infinity, divided by any negative number (apart from negative infinity) is positive infinity.\par
{\pntext\f4 5.\tab}If we multiply negative infinity with NaN, we will get NaN as a result.\par
{\pntext\f4 6.\tab}The product of NaN and negative infinity is 0.\par
{\pntext\f4 7.\tab}The product of two negative infinities is always a positive infinity.\par
{\pntext\f4 8.\tab}The product of both positive and negative infinity is always negative infinity.\par

\pard\cbpat12\widctlpar\b Example:\par
\fs40 Input:\b0\par
\trowd\trgaph10\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalb\cellx10613 
\pard\intbl\cbpat12\widctlpar\sl285\slmult0\cf3\expndtw0\f5\fs21 <!DOCTYPE\cf1  \cf4 html\cf3 >\cf1\par
\cf3 <html>\cf1\par
\cf3 <head>\cf1\par
\cf3 <meta\cf1  \cf4 charset\cf1 =\cf5\rdblquote UTF-8\rdblquote\cf3 >\cf1\par
\cf3 <meta\cf1  \cf4 Http-equiv\cf1 =\cf5\rdblquote X-UA-Compatible\rdblquote\cf1  \cf4 content\cf1 =\cf5\rdblquote IE\cf6 =\cf5 edge\rdblquote\cf3 >\cf1\par
\cf3 <meta\cf1  \cf4 name\cf1 =\cf5\rdblquote viewport\rdblquote\cf1  \cf4 content\cf1 =\cf5\rdblquote width-device-width,\cf1  \cf4 initial-scale\cf1 =\cf5 1.0\rdblquote\cf3 >\cf1\par
\cf3 <title>\cf1 document\cf3 </title>\cf1\par
\cf3 </head>\cf1\par
\~ \par
\cf3 <body>\cf1\par
\~ \~ \cf3 <style>\cf1\par
\~ \~ \~ \~ \cf3 h1\cf1  \{\par
\~ \~ \~ \~ \~ \~ \cf4 color\cf1 : \cf7 green\cf1 ;\par
\~ \~ \~ \~ \}\par
\~ \~ \cf3 </style>\cf1\par
\~ \par
\~ \~ \cf3 <h1>\cf1 Tops Technology\cf3 </h1>\cf1\par
\~ \~ \cf3 <h1>\cf1\par
\~ \~ \~ What is negative infinity in JavaScript?\par
\~ \cf3 </h1>\cf1\par
\~ \cf8 <!-- button start -->\cf1\par
\~ \~ \cf3 <button\cf1  \cf4 onclick\cf1 =\cf5 "TopsNegativeInfinity()"\cf3 >\cf1\par
\~ \~ \~ Generate negative infinite\par
\~ \cf3 </button>\cf1\par
\~ \cf8 <!-- button end -->\cf1\par
\~ \par
\~ \~ \cf3 <p\cf1  \cf4 id\cf1 =\cf5 "Tops"\cf3 ></p>\cf1\par
\~ \par
\~ \~ \cf3 <script>\cf1\par
\~ \~ \~ \~ \cf5 function\cf1  TopsNegativeInfinity() \{\par
\~ \~ \~ \~ \~ \~ \cf8 //negative value greater than the \cf1\par
\~ \~ \~ \~ \~ \~ \cf8 //largest representable number in JavaScript\cf1\par
\~ \~ \~ \~ \~ \~ \cf5 var\cf1  n = (-Number.MAX_VALUE) * \cf9 2\cf1 ; \par
\~ \~ \~ \~ \~ \~ document.getElementById(\cf10 "Tops"\cf1 ).innerHTML = n;\par
\~ \~ \~ \~ \}\par
\~ \~ \cf3 </script>\cf1\par
\~ \par
\cf3 </body>\cf1\par
\~ \par
\cf3 </html>\par
\cf0\b\fs40 Output:\par
\cf1\b0\fs21\par

\pard\intbl\cbpat12\widctlpar\sl288\slmult0\cf0\fs25\cell\row 
\pard\cbpat12\widctlpar\li720\cf2\expndtw2\f4\fs26\par

\pard\cbpat12\widctlpar\s2\li360\sb150\sa150\cf0\expndtw0\b\f0\fs28\par

\pard\cbpat12\widctlpar\s2\fi-360\li720\sb150\sa150\f3 4.\tab\f0 Which company developed JavaScript?\par

\pard\cbpat12\widctlpar\s2\sb150\sa150 Ans.\cf11\highlight12\b0\f4\fs36  \fs28 JavaScript\b\~is a scripting language\~\b0 developed\b\~by Netscape. It can be used to program web browser or even servers. It can dynamically update the contents of the webpage, which is the beauty of\~\b0 JavaScript\par
\cf0\highlight0\b\f0\par

\pard\cbpat12\widctlpar\s2\fi-360\li720\sb150\sa150\f3 5.\tab\f0 What are undeclared and undefined variables?\par

\pard\cbpat12\widctlpar\s2\li360\sb150\sa150 Ans.\par

\pard\cbpat12{\pntext\f14\'B7\tab}{\*\pn\pnlvlblt\pnf14\pnindent0{\pntxtb\'B7}}\fi-360\li1440 {\b0\fs22{\field{\*\fldinst{HYPERLINK "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined"}}{\fldrslt{\ul\cf5\cf5\ul\b\f6\fs26 Undefined}}}}\cf13\b0\f6\fs26\~variable means a variable has been declared but does not have a value.\par

\pard\cbpat12\widctlpar\li1440\par

\pard\cbpat12{\pntext\f14\'B7\tab}{\*\pn\pnlvlblt\pnf14\pnindent0{\pntxtb\'B7}}\fi-360\li1440\b Undeclared\b0\~variable means that the variable does not exist in the program at all.\par

\pard\widctlpar\li720\sa160\sl252\slmult1\par

\pard\cbpat12\widctlpar\par

\pard\widctlpar\sa160\sl252\slmult1\b Undefined Example\par

\pard\widctlpar\sl360\slmult0\cf14\f7\fs23 var\cf15  dog;\cf16\f8\fs26\par

\pard\widctlpar\sa160\sl360\slmult0\cf17\f7\fs23 console\cf15 .\cf18 log\cf19 (\cf15 dog\cf19 )\cf15 ;\cf16\f8\fs26\par

\pard\cbpat12\widctlpar\sa384\cf13\b0\f6 Output:\par

\pard\widctlpar\sa160\sl360\slmult0\cf15\b\f7\fs23 Undefined\cf16\f8\fs26\par

\pard\cbpat12\widctlpar\cf13\b0\f6\par
\b Undeclared Example\par
\par
\cf17\highlight20\f8\fs22 console\cf15 .\cf18 log\cf19 (\cf15 cat\cf19 )\cf15 ;\par
\par
\fs23 ReferenceError: cat is not defined\cf13\highlight0\b0\f6\fs26\par

\pard\cbpat12\widctlpar\s2\sb150\sa150\cf0\b\f0\fs28\par

\pard\cbpat12\widctlpar\s2\fi-360\li720\sb150\sa150\f3 6.\tab\f0 Write the code for adding new elements dynamically?\par

\pard\cbpat12\widctlpar\s2\sb150\sa150 Ans. \par
Example\par

\pard\cbpat12\widctlpar\cf2\expndtw2\f4\fs40 Input:\b0\par

\pard\cbpat12\widctlpar\s2\sb150\sa150\cf0\expndtw0\b\f0\fs28\par

\pard\cbpat12\widctlpar\sl285\slmult0\cf3\b0\f5\fs21 <!DOCTYPE\cf1  \cf4 html\cf3 >\cf1\par
\cf3 <html\cf1  \cf4 lang\cf1 =\cf5 "en"\cf3 >\cf1\par
\cf3 <head>\cf1\par
\~ \~ \cf3 <meta\cf1  \cf4 charset\cf1 =\cf5 "UTF-8"\cf3 >\cf1\par
\~ \~ \cf3 <meta\cf1  \cf4 http-equiv\cf1 =\cf5 "X-UA-Compatible"\cf1  \cf4 content\cf1 =\cf5 "IE=edge"\cf3 >\cf1\par
\~ \~ \cf3 <meta\cf1  \cf4 name\cf1 =\cf5 "viewport"\cf1  \cf4 content\cf1 =\cf5 "width=device-width, initial-scale=1.0"\cf3 >\cf1\par
\~ \~ \cf3 <title>\cf1 How to dynamically create\par
\~ \~ \~ \~ new elements in JavaScript?\cf3 </title>\cf1\par
\~ \~ \~ \~ \cf3 <style>\cf1\par
\~ \~ \~ \~ \~ \~ \cf8 /* CSS for child item */\cf1\par
\~ \~ \~ \~ \~ \~ \cf3 .child\cf1  \{\par
\~ \~ \~ \~ \~ \~ \~ \~ \cf4 color\cf1 : \cf7 white\cf1 ;\par
\~ \~ \~ \~ \~ \~ \~ \~ \cf4 background-color\cf1 : \cf7 green\cf1 ;\par
\~ \~ \~ \~ \~ \~ \}\par
\~ \~ \~ \~ \cf3 </style>\cf1\par
\cf3 </head>\cf1\par
\cf3 <body\cf1  \cf4 id\cf1 =\cf5 "body"\cf3 >\cf1\par
\~ \~ \cf3 <h1\cf1  \cf4 style\cf1 =\cf5 "text-align:center; color:green;"\cf3 >\cf1\par
\~ \~ \~ \~ Top Technology\par
\~ \~ \cf3 </h1>\cf1\par
\~ \~ \cf8 <!-- Form to add item -->\cf1\par
\~ \~ \cf3 <form\cf1  \cf4 action\cf1 =\cf5 "#"\cf1  \cf4 style\cf1 =\cf5 "text-align: center;"\cf3 >\cf1\par
\~ \par
\~ \~ \~ \~ \cf8 <!-- Type of element -->\cf1\par
\~ \~ \~ \~ \cf3 <label\cf1  \cf4 for\cf1 =\cf5 "type"\cf3 >\cf1\par
\~ \~ \~ \~ \~ \~ Add Element Type\par
\~ \~ \~ \~ \cf3 </label>\cf1\par
\~ \par
\~ \~ \~ \~ \cf3 <input\cf1  \cf4 type\cf1 =\cf5 "text"\cf1  \cf4 id\cf1 =\cf5 "type"\cf1  \cf4 placeholder\cf1 =\cf5 "Like: div, h1, li...."\cf1  \cf4 value\cf1 =\cf5 "h3"\cf1  \cf3 />\cf1\par
\~ \~ \~ \~ \cf3 <br\cf1  \cf3 /><br\cf1  \cf3 />\cf1\par
\~ \par
\~ \~ \~ \~ \cf8 <!-- Text/value for element --->\cf1\par
\~ \~ \~ \~ \cf3 <label\cf1  \cf4 for\cf1 =\cf5 "value"\cf3 >\cf1  Add Element Value\cf3 </label>\cf1\par
\~ \par
\~ \~ \~ \~ \cf3 <input\cf1  \cf4 type\cf1 =\cf5 "text"\cf1  \cf4 id\cf1 =\cf5 "value"\cf1  \cf4 placeholder\cf1 =\cf5 "Like: Hello Top Technology"\cf1  \cf4 value\cf1 =\cf5 "Hello Top Technology"\cf1  \cf3 />\cf1\par
\~ \~ \~ \~ \cf3 <br\cf1  \cf3 /><br\cf1  \cf3 />\cf1\par
\~ \par
\~ \~ \~ \~ \cf8 <!-- Add attributes for element --->\cf1\par
\~ \~ \~ \~ \cf3 <label\cf1  \cf4 for\cf1 =\cf5 "attr"\cf3 >\cf1  Add Attributes\cf3 </label>\cf1\par
\~ \~ \~ \~ \cf3 <form\cf1  \cf4 id\cf1 =\cf5 "attr"\cf3 >\cf1\par
\~ \~ \~ \~ \~ \~ \cf3 <label\cf1  \cf4 for\cf1 =\cf5 "attrType"\cf3 >\cf1 Add Attribute Type\cf3 </label>\cf1\par
\~ \~ \~ \~ \~ \~ \cf3 <input\cf1  \cf4 type\cf1 =\cf5 "text"\cf1  \cf4 style\cf1 =\cf5 "width:240px;"\cf1  \cf4 placeholder\cf1 =\cf5 "forexample: enter \cf1\par
\cf5\~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ 'class' without quotes"\cf1  \cf4 id\cf1 =\cf5 "attrType"\cf1  \cf4 value\cf1 =\cf5 "class"\cf1  \cf3 />\cf1\par
\~ \par
\~ \~ \~ \~ \~ \~ \cf3 <br\cf1  \cf3 />\cf1\par
\~ \~ \~ \~ \~ \~ \cf3 <br\cf1  \cf3 />\cf1\par
\~ \~ \~ \~ \~ \~ \cf3 <label\cf1  \cf4 for\cf1 =\cf5 "attrValue"\cf3 >\cf1\par
\~ \~ \~ \~ \~ \~ \~ \~ Add Attribute Value\par
\~ \~ \~ \~ \~ \~ \cf3 </label>\cf1\par
\~ \~ \~ \~ \~ \~ \cf3 <input\cf1  \cf4 style\cf1 =\cf5 "width:240px;"\cf1  \cf4 type\cf1 =\cf5 "text"\cf1  \cf4 placeholder\cf1 =\cf5 "for example: enter \cf1\par
\cf5\~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ 'child' without quotes"\cf1  \cf4 id\cf1 =\cf5 "attrValue"\cf1  \cf4 value\cf1 =\cf5 "child"\cf1  \cf3 />\cf1\par
\~ \~ \~ \~ \cf3 </form>\cf1\par
\~ \~ \~ \~ \cf3 <br\cf1  \cf3 /><br\cf1  \cf3 />\cf1\par
\~ \par
\~ \~ \~ \~ \cf8 <!-- Submit the form -->\cf1\par
\~ \~ \~ \~ \cf3 <button\cf1  \cf4 type\cf1 =\cf5 "button"\cf1  \cf4 onClick\cf1 =\cf5 "addItem()"\cf3 >\cf1\par
\~ \~ \~ \~ \~ \~ Add\par
\~ \~ \~ \~ \cf3 </button>\cf1\par
\~ \~ \cf3 </form>\cf1\par
\~ \par
\~ \~ \cf3 <div>\cf1\par
\~ \~ \~ \~ \cf3 <p>\cf1 CHILD 1\cf3 </p>\cf1\par
\~ \~ \cf3 </div>\cf1\par
\~ \par
\~ \~ \cf3 <script>\cf1\par
\~ \~ \~ \~ \cf8 // Define the addItem function\cf1\par
\~ \~ \~ \~ \cf8 // to be called through onclick()\cf1\par
\~ \~ \~ \~ \cf5 function\cf1  addItem() \{\par
\~ \~ \~ \~ \~ \par
\~ \~ \~ \~ \~ \~ \cf8 // Get Elements by id of the form inputs\cf1\par
\~ \~ \~ \~ \~ \~ \cf5 let\cf1  parent = \par
\~ \~ \~ \~ \~ \~ \~ \~ document.getElementById(\cf10 "body"\cf1 );\par
\~ \~ \~ \~ \~ \par
\~ \~ \~ \~ \~ \~ \cf5 let\cf1  attrType = \par
\~ \~ \~ \~ \~ \~ \~ \~ document.getElementById(\cf10 "attrType"\cf1 );\par
\~ \~ \~ \~ \~ \par
\~ \~ \~ \~ \~ \~ \cf5 let\cf1  attrValue = \par
\~ \~ \~ \~ \~ \~ \~ \~ document.getElementById(\cf10 "attrValue"\cf1 );\par
\~ \~ \~ \~ \~ \~ \cf5 let\cf1  type = document.getElementById(\cf10 "type"\cf1 );\par
\~ \~ \~ \~ \~ \~ \cf5 let\cf1  value = document.getElementById(\cf10 "value"\cf1 );\par
\~ \~ \~ \~ \~ \par
\~ \~ \~ \~ \~ \~ \cf5 if\cf1  (type.value == \cf10 ""\cf1  || value.value == \cf10 ""\cf1 ) \{\par
\~ \~ \~ \~ \~ \~ \~ \~ window.alert(\par
\~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \cf10 "There is an error in form input"\cf1 );\par
\~ \~ \~ \~ \~ \~ \~ \~ window.reload();\par
\~ \~ \~ \~ \~ \~ \}\par
\~ \~ \~ \~ \~ \par
\~ \~ \~ \~ \~ \~ \cf8 // createElement() method is used\cf1\par
\~ \~ \~ \~ \~ \~ \cf8 // to create a new element\cf1\par
\~ \~ \~ \~ \~ \~ type = document.createElement(type.value);\par
\~ \~ \~ \~ \~ \par
\~ \~ \~ \~ \~ \~ \cf8 // Append a text node for this example\cf1\par
\~ \~ \~ \~ \~ \~ type.appendChild(\par
\~ \~ \~ \~ \~ \~ \~ \~ document.createTextNode(value.value));\par
\~ \~ \~ \~ \~ \par
\~ \~ \~ \~ \~ \~ \cf5 if\cf1  (attrValue.value == \cf10 ""\cf1  \par
\~ \~ \~ \~ \~ \~ \~ \~ \~ \~ || attrType.value == \cf10 ""\cf1 ) \{\par
\~ \~ \~ \~ \~ \~ \~ \~ attr = \cf5 null\cf1 ;\par
\~ \~ \~ \~ \~ \~ \}\par
\~ \~ \~ \~ \~ \~ \cf5 else\cf1  \{\par
\~ \~ \~ \~ \~ \~ \~ \~ \cf8 // setAttribute() is used to set\cf1\par
\~ \~ \~ \~ \~ \~ \~ \~ \cf8 // the attributes of the element\cf1\par
\~ \~ \~ \~ \~ \~ \~ \~ type.setAttribute(\par
\~ \~ \~ \~ \~ \~ \~ \~ \~ \~ attrType.value, attrValue.value);\par
\~ \~ \~ \~ \~ \~ \}\par
\~ \~ \~ \~ \~ \par
\~ \~ \~ \~ \~ \~ \cf8 // Append as child to the parent\cf1\par
\~ \~ \~ \~ \~ \~ \cf8 // i.e. body\cf1\par
\~ \~ \~ \~ \~ \~ parent.appendChild(type);\par
\~ \~ \~ \~ \}\par
\~ \~ \cf3 </script>\cf1\par
\cf3 </body>\cf1\par
\~ \par
\cf3 </html>\cf1\par
\cf3 </body>\cf1\par
\cf3 </html>\par
\cf0\b\fs40 Output:\par
\cf1\b0\fs21\par

\pard\cbpat12\widctlpar\s2\sb150\sa150\cf0\b\f0\fs28\par

\pard\cbpat12\widctlpar\s2\fi-360\li720\sb150\sa150\f3 7.\tab\f0 What is the difference between ViewState and SessionState?\par

\pard\cbpat12\widctlpar\s2\li360\sb150\sa150 Ans.\par
\trowd\trgaph108\trleft5\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx4513\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx9021 
\pard\intbl\widctlpar\sa160\sl252\slmult1\qc\cf21\expndtw2\b0\f4 ViewState\cell SessionState\cell\row\trowd\trgaph108\trleft5\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx4513\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx9021 
\pard\intbl\widctlpar\sa160\sl252\slmult1\cf2\fs25 Maintained at page level only.\cell Maintained at session level.\cell\row\trowd\trgaph108\trleft5\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx4513\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx9021 
\pard\intbl\widctlpar\sa160\sl252\slmult1 View state can only be visible from a single page and not multiple pages.\cell Session state value availability is across all pages available in a user session.\cell\row\trowd\trgaph108\trleft5\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx4513\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx9021 
\pard\intbl\widctlpar\sa160\sl252\slmult1 It will retain values in the event of a postback operation occurring.\cell In session state, user data remains in the server. Data is available to user until the browser is closed or there is session expiration.\cell\row\trowd\trgaph108\trleft5\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx4513\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx9021 
\pard\intbl\widctlpar\sa160\sl252\slmult1 Information is stored on the client\rquote s end only.\cell Information is stored on the server.\cell\row\trowd\trgaph108\trleft5\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx4513\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx9021 
\pard\intbl\widctlpar\sa160\sl252\slmult1 used to allow the persistence of page-instance-specific data.\cell used for the persistence of user-specific data on the server\rquote s end.\cell\row\trowd\trgaph108\trleft5\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx4513\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx9021 
\pard\intbl\widctlpar\sa160\sl252\slmult1 ViewState values are lost/cleared when new page is loaded.\cell SessionState can be cleared by programmer or user or in case of timeouts.\cell\row 
\pard\cbpat12\widctlpar\s2\li360\sb150\sa150\cf0\expndtw0\b\f0\fs28\par
\par

\pard\cbpat12\widctlpar\s2\fi-360\li720\sb150\sa150\f3 8.\tab\f0 What is === operator?\par

\pard\cbpat12\widctlpar\s2\sb150\sa150      Ans. \cf22\highlight12\b0\f2 The strict equality operator (\highlight0\f9 ===\highlight12\f2 ) checks whether its two operands are equal, returning a Boolean result. Unlike the\~{\cf0\highlight0\b\f0\fs36{\field{\*\fldinst{HYPERLINK "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Equality" }}{\fldrslt{\ul\cf5\cf5\highlight12\ul\f2\fs28 equality}}}}\f2\fs28\~operator, the strict equality operator always considers operands of different types to be different.\par
\cf0\highlight0\f0\par

\pard\cbpat12\widctlpar\s2\fi-360\li720\sb150\sa150\b\f3 9.\tab\f0 How can the style/class of an element be changed?\par

\pard\cbpat12\widctlpar\s2\li360\sb150\sa150 Ans.\par

\pard\cbpat12\widctlpar\s2\sb150\sa150\cf2\highlight12\expndtw2\b0\f4\fs26 1:\~\b Changing CSS with the help of the style property:\cf0\highlight0\expndtw0\b0\f0\fs28\par

\pard\cbpat12\widctlpar\cf2\expndtw2\b\f4\fs26 Syntax:\b0\par

\pard\widctlpar\sa150\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\f5\fs24 document.getElementById("id").style.property = new_style\par

\pard\cbpat12\widctlpar\b\f4\fs26 Example:\b0\~In this example, we have built a PAN number validator. First, we will take the input value and match it with a regex pattern. If it matches then using JavaScript add an inline style on the <p> tag. Otherwise, add a different style on the <p> tag.\par

\pard\cbpat12\widctlpar\sl288\slmult0\cf1\f5\fs22\par

\pard\cbpat12\widctlpar\cf2\b\f4\fs40 Input:\b0\par

\pard\cbpat12\widctlpar\sl288\slmult0\f5\fs24\par

\pard\cbpat12\widctlpar\sl285\slmult0\cf3\expndtw0\fs21 <!DOCTYPE\cf1  \cf4 html\cf3 >\cf1\par
\cf3 <html\cf1  \cf4 lang\cf1 =\cf5 "en"\cf3 >\cf1\par
\cf3 <head>\cf1\par
\~ \~ \cf3 <meta\cf1  \cf4 charset\cf1 =\cf5 "UTF-8"\cf3 >\cf1\par
\~ \~ \cf3 <meta\cf1  \cf4 http-equiv\cf1 =\cf5 "X-UA-Compatible"\cf1  \cf4 content\cf1 =\cf5 "IE=edge"\cf3 >\cf1\par
\~ \~ \cf3 <meta\cf1  \cf4 name\cf1 =\cf5 "viewport"\cf1  \cf4 content\cf1 =\cf5 "width=device-width, initial-scale=1.0"\cf3 >\cf1\par
\~ \~ \cf3 <title>\cf1 Document\cf3 </title>\cf1\par
\cf3 </head>\cf1\par
\cf3 <body>\cf1\par
\~ \~ \cf3 <h1\cf1  \cf4 style\cf1 =\cf5 "color: green;"\cf3 >\cf1\par
\~ \~ \~ \~ Top Technology\par
\~ \~ \cf3 </h1>\cf1\par
\~ \par
\~ \~ \cf3 <h2>\cf1\par
\~ \~ \~ \~ How can the style/class of\par
\~ \~ \~ \~ an element be changed?\par
\~ \~ \cf3 </h2>\cf1\par
\~ \par
\~ \~ \cf3 <b>\cf1 Validate Pan Number\cf3 </b>\cf1\par
\~ \par
\~ \~ \cf3 <input\cf1  \cf4 type\cf1 =\cf5 "text"\cf1  \cf4 id\cf1 =\cf5 "pan"\cf1  \cf3 />\cf1\par
\~ \~ \cf3 <p></p>\cf1\par
\~ \~ \cf3 <button\cf1  \cf4 id\cf1 =\cf5 "submit"\cf3 >\cf1 Validate\cf3 </button>\cf1\par
\~ \par
\~ \~ \cf3 <script>\cf1\par
\~ \~ \~ \~ \cf8 // valid pan number start function\cf1\par
\~ \~ \~ \~ \cf5 const\cf1  btn = document.getElementById(\cf10 "submit"\cf1 );\par
\~ \~ \~ \~ btn.addEventListener(\cf10 "click"\cf1 , \cf5 function\cf1  () \{\par
\~ \~ \~ \~ \~ \~ \cf5 const\cf1  pan = document.getElementById(\cf10 "pan"\cf1 ).value;\par
\~ \~ \~ \~ \~ \~ \cf5 const\cf1  para = document.querySelector(\cf10 "p"\cf1 );\par
\~ \par
\~ \~ \~ \~ \~ \~ \cf5 let\cf1  regex =\cf23  /([A-Z])\cf1\{5\}\cf23 ([0-9])\cf1\{4\}\cf23 ([A-Z])\cf1\{1\}\cf5 $\cf23 /\cf1 ;\par
\~ \~ \~ \~ \~ \~ \cf5 if\cf1  (regex.test(pan.toUpperCase())) \{\par
\~ \~ \~ \~ \~ \~ \~ \~ para.innerHTML = \cf10 "Hurrey It's correct"\cf1 ;\par
\~ \par
\~ \~ \~ \~ \~ \~ \~ \~ \cf8 // Inline style\cf1\par
\~ \~ \~ \~ \~ \~ \~ \~ para.style.color = \cf10 "green"\cf1 ;\par
\~ \~ \~ \~ \~ \~ \} \cf5 else\cf1  \{\par
\~ \~ \~ \~ \~ \~ \~ \~ para.innerHTML = \cf10 "OOps It's wrong!"\cf1 ;\par
\~ \par
\~ \~ \~ \~ \~ \~ \~ \~ \cf8 // Inline style\cf1\par
\~ \~ \~ \~ \~ \~ \~ \~ para.style.color = \cf10 "red"\cf1 ;\par
\~ \~ \~ \~ \~ \~ \}\par
\~ \~ \~ \~ \});\par
\~ \~ \cf3 </script>\cf1\par
\cf3 </body>\cf1\par
\cf3 </html>\cf1\par
\par
\cf0\b\fs40 Output:\par
\cf1\b0\fs21\par

\pard\cbpat12\widctlpar\sl288\slmult0\expndtw2\fs22\par

\pard\cbpat12\widctlpar\cf2\b\f4\fs26 2. The className Property:\~\b0 This property is used to set the current class of the element to the specified class.\par
\b Syntax:\b0\par

\pard\widctlpar\sa150\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\f5\fs24 document.getElementById("id").className = class\par

\pard\cbpat12\widctlpar\b\f4\fs26 Example:\b0\par

\pard\brdrl\brdrs\brdrw15\brsp180 \brdrt\brdrs\brdrw15\brsp160 \brdrr\brdrs\brdrw15\brsp180 \cbpat12\widctlpar\li720\ri180\sa160\sl285\slmult0\fs27 HTML\par

\pard\cbpat12\widctlpar\li720\b\fs40 Input:\b0\par

\pard\brdrl\brdrs\brdrw15\brsp180 \brdrt\brdrs\brdrw15\brsp160 \brdrr\brdrs\brdrw15\brsp180 \cbpat12\widctlpar\li360\ri180\sa160\sl285\slmult0\fs27\par
\trowd\trgaph10\trbrdrl\brdrs\brdrw15\brsp180 \trbrdrt\brdrs\brdrw15\brsp160 \trbrdrr\brdrs\brdrw15\brsp180 \trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalb\cellx10433 
\pard\intbl\cbpat12\widctlpar\sl285\slmult0\cf3\expndtw0\f5\fs21 <!DOCTYPE\cf1  \cf4 html\cf3 >\cf1\par
\cf3 <html\cf1  \cf4 lang\cf1 =\cf5 "en"\cf3 >\cf1\par
\~ \par
\cf3 <head>\cf1\par
\cf3 <meta\cf1  \cf4 charset\cf1 =\cf5\rdblquote UTF-8\rdblquote\cf3 >\cf1\par
\cf3 <meta\cf1  \cf4 Http-equiv\cf1 =\cf5\rdblquote X-UA-Compatible\rdblquote\cf1  \cf4 content\cf1 =\cf5\rdblquote IE\cf6 =\cf5 edge\rdblquote\cf3 >\cf1\par
\cf3 <meta\cf1  \cf4 name\cf1 =\cf5\rdblquote viewport\rdblquote\cf1  \cf4 content\cf1 =\cf5\rdblquote width-device-width,\cf1  \cf4 initial-scale\cf1 =\cf5 1.0\rdblquote\cf3 >\cf1\par
\cf3 <title>\cf1 document\cf3 </title>\cf1\par
\par
\~ \~ \cf3 <style>\cf1\par
\~ \~ \~ \~ \cf3 .colorBlue\cf1  \{\par
\~ \~ \~ \~ \~ \~ \cf4 color\cf1 : \cf7 blue\cf1 ;\par
\~ \~ \~ \~ \}\par
\par
\~ \~ \~ \~ \cf3 .colorRed\cf1  \{\par
\~ \~ \~ \~ \~ \~ \cf4 color\cf1 : \cf7 red\cf1 ;\par
\~ \~ \~ \~ \}\par
\~ \~ \cf3 </style>\cf1\par
\cf3 </head>\cf1\par
\~ \par
\cf3 <body>\cf1\par
\~ \~ \cf3 <h1\cf1  \cf4 style\cf1 =\cf5 "color: green;"\cf3 >\cf1\par
\~ \~ \~ \~ Top technology\par
\~ \~ \cf3 </h1>\cf1\par
\~ \~ \~\par
\~ \~ \cf3 <h2>\cf1\par
\~ \~ \~ \~ How can the style/class of \par
\~ \~ \~ \~ an element be changed?\par
\~ \~ \cf3 </h2>\cf1\par
\~ \~ \~ \par
\~ \~ \cf3 <h3>\cf1 className Example\cf3 </h3>\cf1\par
\~ \~ \~ \par
\~ \~ \cf3 <p\cf1  \cf4 class\cf1 =\cf5 "colorBlue"\cf3 >\cf1\par
\~ \~ \~ \~ Top Technology is a computer science portal\par
\~ \~ \~ \~ for Tops.This platform has been designed\par
\~ \~ \~ \~ for every Top wishing to expand their\par
\~ \~ \~ \~ knowledge, share their knowledge and is\par
\~ \~ \~ \~ ready to grab their dream job. GFG have\par
\~ \~ \~ \~ millions of articles, live as well\par
\~ \~ \~ \~ as online courses, thousands of tutorials\par
\~ \~ \~ \~ and much more just for the Top inside you.\par
\~ \~ \cf3 </p>\cf1\par
\~ \~ \~ \par
\~ \~ \cf3 <button\cf1  \cf4 id\cf1 =\cf5 "submit"\cf3 >\cf1 Change Color\cf3 </button>\cf1\par
\~ \par
\~ \~ \cf3 <script>\cf1\par
\~ \~ \~ \~ \cf8 // change color start function\cf1\par
\~ \~ \~ \~ \cf5 const\cf1  btn = document.getElementById(\cf10 "submit"\cf1 );\par
\~ \~ \~ \~ \cf5 const\cf1  para = document.querySelector(\cf10 "p"\cf1 );\par
\~ \par
\~ \~ \~ \~ btn.addEventListener(\cf10 "click"\cf1 , \cf5 function\cf1  () \{\par
\~ \~ \~ \~ \~ \~ para.className = \cf10 "colorRed"\cf1 ;\par
\~ \~ \~ \~ \});\par
\~ \~ \cf3 </script>\cf1\par
\cf3 </body>\cf1\par
\~ \par
\cf3 </html>\cf1\par
\par
\cf0\b\fs40 Output:\par

\pard\intbl\cbpat12\widctlpar\li720\sl288\slmult0\b0\fs25\cell\row 
\pard\cbpat12\widctlpar\sl288\slmult0\cf2\expndtw2\fs24\par

\pard\cbpat12\widctlpar\f4\fs26\par

\pard\cbpat12\widctlpar\s2\li360\sb150\sa150\cf0\expndtw0\b\f0\fs28\par

\pard\cbpat12\widctlpar\s2\fi-360\li720\sb150\sa150\f3 10.\tab\f0 How to read and write a file using JavaScript?\par

\pard\widctlpar\s2\sb100\sa100 Ans.\cf1\b0\f4\fs35  \b\fs28 Reading from the file\par

\pard\widctlpar\li30\ri30\sb30\sa150\qj\b0\fs24 After the File System module is imported, the reading of the file in JavaScript can be done by using the readFile() function.\par

\pard\keep\keepn\widctlpar\s3\sl252\slmult1\cf24\b\fs30 Syntax\cf0\b0\par

\pard\widctlpar\li30\ri30\sb30\sa150\qj\cf1\fs24 The syntax to read from a file is as follows \f10\u8722?\f4\lang16393\par

\pard\widctlpar\sb120\sa120\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\f9\fs23 readFile(path, format, callBackFunc)\par

\pard\widctlpar\li30\ri30\sb30\sa150\qj\f4\fs24 The readFile() function accepts three parameters including one optional parameter.\par

\pard{\pntext\f14\'B7\tab}{\*\pn\pnlvlblt\pnf14\pnindent0{\pntxtb\'B7}}\fi-360\li1395\qj\b Path\b0\~\f10\u8722?\f4\lang16393  The first parameter is the path of the test file from which the contents are to read. If the current location or directory is the same directory where the file which is to be opened and read is located then, only the file name has to be given.\par
{\pntext\f14\'B7\tab}\b Format\b0\~\f10\u8722?\f4\lang16393  The second parameter is the optional parameter which is the format of the text file. The format can be ASCII, utf-8 etc.\par
{\pntext\f14\'B7\tab}\b CallBackFunc\b0\~\f10\u8722?\f4\lang16393  The third parameter is the call back function which takes the error as the parameter and displays the fault is any raised due to the error.\par

\pard\keep\keepn\widctlpar\s3\sl252\slmult1\cf24\fs28 Example:\cf0\par

\pard\widctlpar\li30\ri30\sb30\sa150\qj\cf1 Following example tries to read the contents of the file populate in the previous example and print it \f10\u8722?\f4\lang16393\par

\pard\widctlpar\sb120\sa120\sl315\slmult0\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf25\f5 const\cf1  fs \cf26 =\cf1  \cf27 require\cf28 (\cf29 'fs'\cf28 )\cf1\par
fs\cf28 .\cf27 readFile\cf28 (\cf29 'tp.txt'\cf28 ,\cf1  \cf28 (\cf1 err\cf28 ,\cf1  inputD\cf28 )\cf1  \cf26 =>\cf1  \cf28\{\cf1\par
   \cf25 if\cf1  \cf28 (\cf1 err\cf28 )\cf1  \cf25 throw\cf1  err\cf28 ;\cf1\par
      console\cf28 .\cf27 log\cf28 (\cf1 inputD\cf28 .\cf27 toString\cf28 ());\cf1\par
\cf28\})\cf1\par

\pard\keep\keepn\widctlpar\s3\sl252\slmult1\cf24\f4 Output\cf0\par

\pard\widctlpar\li30\ri30\sb30\sa150\qj\cf1 Following is the output of the above example \f10\u8722?\f4\lang16393\par

\pard\widctlpar\sb120\sa120\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\f9 You are reading the content from Tutorials Point\par

\pard\widctlpar\li30\ri30\sb30\sa150\qj\f4 The text which is displayed in the console is the text which is in the given file.\par
\par

\pard\widctlpar\s2\sb100\sa100\b Write operation on a file\par

\pard\widctlpar\li30\ri30\sb30\sa150\qj\b0 After the File System file is imported then, the writeFile() operation is called. The writeFile() method is used to write into the file in JavaScript. The syntax of this method is as follows \f10\u8722?\f4\lang16393\par

\pard\widctlpar\sb120\sa120\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\f9 writeFile(path,inputData,callBackFunction)\par

\pard\widctlpar\li30\ri30\sb30\sa150\qj\f4 The writeFile() function accepts three parameters \f10\u8722?\f4\lang16393\par

\pard{\pntext\f14\'B7\tab}{\*\pn\pnlvlblt\pnf14\pnindent0{\pntxtb\'B7}}\fi-360\li1395\qj Path\~\f10\u8722?\f4\lang16393  The first parameter is the path of the file or the name of the file into which the input data is to be written.\par

\pard\widctlpar\li1395\qj If there is a file already, then the contents in the file are deleted and the input which is given by the user will get updated or if the file is not present, then the file with that will be created in the given path and the input information is written into it.\par

\pard{\pntext\f14\'B7\tab}{\*\pn\pnlvlblt\pnf14\pnindent0{\pntxtb\'B7}}\fi-360\li1395\qj inputData\~\f10\u8722?\f4\lang16393  The second parameter is the input data which contains the data to be written in the file that is opened.\par
{\pntext\f14\'B7\tab}callBackFuntion\~\f10\u8722?\f4\lang16393  The third parameter is the function which is the call back function which takes the error as the parameter and shows the fault if the write operation fails.\par

\pard\keep\keepn\widctlpar\s3\sl252\slmult1\cf24 Example:\cf0\par

\pard\widctlpar\li30\ri30\sb30\sa150\qj\cf1 Following is an example of the write operation in files in JavaScript.\par

\pard\widctlpar\sb120\sa120\sl315\slmult0\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf25\f5 const\cf1  fs \cf26 =\cf1  \cf27 require\cf28 (\cf29 'fs'\cf28 )\cf1\par
\cf25 let\cf1  fInput \cf26 =\cf1  \cf29 "You are reading the content from Tutorials Point"\cf1\par
fs\cf28 .\cf27 writeFile\cf28 (\cf29 'tp.txt'\cf28 ,\cf1  fInput\cf28 ,\cf1  \cf28 (\cf1 err\cf28 )\cf1  \cf26 =>\cf1  \cf28\{\cf1\par
   \cf25 if\cf1  \cf28 (\cf1 err\cf28 )\cf1  \cf25 throw\cf1  err\cf28 ;\cf1\par
   \cf25 else\cf28\{\cf1\par
      console\cf28 .\cf27 log\cf28 (\cf29 "The file is updated with the given data"\cf28 )\cf1\par
   \cf28\}\cf1\par
\cf28\})\cf1\par

\pard\widctlpar\li30\ri30\sb30\sa150\qj\f4\par

\pard\cbpat12\widctlpar\s2\li720\sb150\sa150\cf0\f1\par

\pard\cbpat12\widctlpar\s2\fi-360\li720\sb150\sa150\b\f3 11.\tab\f1  What are all the looping structures in JavaScript?\par

\pard\cbpat12\widctlpar\s2\li360\sb150\sa150 Ans.\par

\pard\cbpat12\widctlpar\sa160\cf30\f4\fs24 JavaScript supports different kinds of loops:\b0\par

\pard\cbpat12{\pntext\f14\'B7\tab}{\*\pn\pnlvlblt\pnf14\pnindent360{\pntxtb\'B7}}\fi-360\li720\sa60 for - loops through a block of code a number of times.\par
{\pntext\f14\'B7\tab}for/in - loops through the properties of an object.\par
{\pntext\f14\'B7\tab}for/of - loops through the values of an iterable object.\par
{\pntext\f14\'B7\tab}while - loops through a block of code while a specified condition is true.\par

\pard\cbpat12\widctlpar\s2\sb150\sa150\cf0\b\f0\fs28\par

\pard\cbpat12\widctlpar\s2\fi-360\li720\sb150\sa150\f3 12.\tab\f0  How can you convert the string of any base to an integer in JavaScript?\par

\pard\cbpat12\widctlpar\sa150 Ans.\cf2\expndtw2\b0\f4\fs26  Given a string containing an integer value and along with that user passes a base value. We need to convert that string of any base value to an integer in JavaScript.\par

\pard\widctlpar\sa150\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\f5\fs24 String          Integer\par
"1002"            1002\par

\pard\cbpat12\widctlpar\f4\fs26 For performing the above-illustrated task, we would be using a method (or a function) provided by JavaScript called as\~\b parseInt().\b0\~\par

\pard\cbpat12\widctlpar\sa150 This is a special method, provided by JavaScript, that takes an integer value (of any base which is either specified or not) and further converts the string into an integer value.\par

\pard\cbpat12\widctlpar\b Syntax:\b0\par

\pard\cbpat12{\pntext\f14\'B7\tab}{\*\pn\pnlvlblt\pnf14\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sa150 Following is the syntax that a user may use to convert a string into an integer value (of any base)-\par

\pard\cbpat12\widctlpar\li1080\sa150\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\f5\fs24 parseInt(string_value, base)\par

\pard\cbpat12{\pntext\f14\'B7\tab}{\*\pn\pnlvlblt\pnf14\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sa150\f4\fs26 Alternatively, if we don\rquote t want to specify the base value and just want to convert our string value into an integer value itself, then we may use the following syntax also-\par

\pard\cbpat12\widctlpar\li1080\sa150\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\f5\fs24 parseInt(string_value)\par

\pard\cbpat12\widctlpar\f4\fs26 Default value returned by base or radix of parseInt() method is\~\b 10.\~\b0 In other words, if we don\rquote t specify any base or radix value then it by default converts the string value to an integer value by taking into regard the base or radix value as 10.\par

\pard\cbpat12\widctlpar\sa150 Let us visualize all of the above-illustrated facts with some of the following examples-\par

\pard\cbpat12\widctlpar\b Example:\~ \b0 In this example, we would be passing the string value in a method (which is explicitly declared for ease purpose) and further that string value is passed inside the parseInt() method which then further converts that string value in the corresponding integer value.\par

\pard\brdrl\brdrs\brdrw15\brsp180 \brdrt\brdrs\brdrw15\brsp160 \brdrr\brdrs\brdrw15\brsp180 \cbpat12{\pntext\f14\'B7\tab}{\*\pn\pnlvlblt\pnf14\pnindent360{\pntxtb\'B7}}\fi-360\li720\ri180\sa160\sl285\slmult0\fs27 JavaScript\par
\trowd\trgaph10\trbrdrl\brdrs\brdrw15\brsp180 \trbrdrt\brdrs\brdrw15\brsp160 \trbrdrr\brdrs\brdrw15\brsp180 \trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalb\cellx10433 
\pard\intbl\cbpat12\widctlpar\sl288\slmult0\cf1\expndtw0\f5\fs22 <script>\cf0\fs25\par
\fs22\~\~\~\~\cf1 let stringConversion = (string_value) => \{\cf0\fs25\par
\fs22\~\~\~\~\~\~\cf1 console.log(\cf5 "Initial Type: "\cf0\fs25  \cf1\fs22 + \cf31\b typeof\cf0\b0\fs25  \cf1\fs22 string_value);\cf0\fs25\par
\fs22\~\~\~\~\~\~\cf1 let integer_value = parseInt(string_value);\cf0\fs25\par
\fs22\~\~\~\~\~\~\cf1 console.log(\cf5 "Final Type: "\cf0\fs25  \cf1\fs22 + \cf31\b typeof\cf0\b0\fs25  \cf1\fs22 integer_value);\cf0\fs25\par
\fs22\~\~\~\~\~\~\cf1 console.log(integer_value);\cf0\fs25\par
\fs22\~\~\~\~\cf1\};\cf0\fs25\par
\fs22\~\~\~\~\~\fs25\~\par
\fs22\~\~\~\~\cf1 stringConversion(\cf5 "512000"\cf1 );\cf0\fs25\par
\fs22\~\~\~\~\cf1 stringConversion(\cf5 "126410"\cf1 );\cf0\fs25\par
\fs22\~\~\~\~\cf1 stringConversion(\cf5 "0x8975"\cf1 );\cf0\fs25\par
\cf1\fs22 </script>\cf0\fs25\cell\row 
\pard\cbpat12\widctlpar\cf2\expndtw2\b\f4\fs26 Output:\b0\par

\pard\widctlpar\sa150\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\f5\fs24 Initial Type: string\par
Final Type: number\par
512000\par
Initial Type: string\par
Final Type: number\par
126410\par
Initial Type: string\par
Final Type: number\par
35189\par

\pard\cbpat12\widctlpar\s2\li360\sb150\sa150\cf0\expndtw0\b\f0\fs28\par

\pard\cbpat12\widctlpar\s2\fi-360\li720\sb150\sa150\f3 13.\tab\f0  What is the function of the delete operator?\par

\pard\cbpat12\widctlpar\sb240\sa240 Ans.\cf32\b0\f11\fs27  The\~\cf33\highlight34\b\f5\fs20 delete\cf32\highlight0\f11\fs27\~operator\b0\~in JavaScript is used to delete an object\rquote s property.\par
If it is used to delete an object property that already exists, it returns\~\cf33\highlight34\f5\fs20 true\cf32\highlight0\f11\fs27\~and removes the property from the object. However, deleting an object property that doesn\rquote t exist will not affect the object, but will still return\~\cf33\highlight34\f5\fs20 true\cf32\highlight0\f11\fs27 .\par
The only time\~\cf33\highlight34\f5\fs20 false\cf32\highlight0\f11\fs27\~will be returned is when the\~\cf33\highlight34\f5\fs20 delete\cf32\highlight0\f11\fs27\~operator is used to delete a variable or a function.\par

\pard\cbpat12\keep\keepn\widctlpar\s3\sb300\sa150\sl252\slmult1\cf24\expndtw6\f12\fs24 Syntax\cf0\fs27\par

\pard\cbpat12\widctlpar\sb240\sa240\cf32\expndtw0\f11 The syntax for using the\~\cf33\highlight34\f5\fs20 delete\cf32\highlight0\f11\fs27\~operator is as follows:\par

\pard\brdrl\brdrs\brdrw15\brsp140 \brdrt\brdrs\brdrw15\brsp140 \brdrr\brdrs\brdrw15\brsp140 \brdrb\brdrs\brdrw15\brsp140 \widctlpar\sb240\sa240\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf35\f5\fs20 delete\cf36\~object\cf37 .\cf36 property\cf37 ;\cf38\line\cf39 //\~OR\cf38\line\cf35 delete\cf36\~object\cf37 [\cf40 "property"\cf37 ];\cf38\fs24\par

\pard\cbpat12\keep\keepn\widctlpar\s3\sb300\sa150\sl252\slmult1\cf24\expndtw6\f12 Parameters\cf0\fs27\par

\pard\cbpat12\widctlpar\sb240\sa240\cf33\highlight34\expndtw0\b\f5\fs20 object\cf32\highlight0\b0\f11\fs27 : This is the object whose property we want to delete.\par
\cf33\highlight34\b\f5\fs20 property\cf32\highlight0\b0\f11\fs27 : This is the property to be deleted.\par

\pard\cbpat12\keep\keepn\widctlpar\s3\sb300\sa150\sl252\slmult1\cf24\expndtw6\f12\fs24 Return value\cf0\fs27\par

\pard\cbpat12\widctlpar\sb240\sa240\cf32\expndtw0\f11 The\~\cf33\highlight34\f5\fs20 delete\cf32\highlight0\f11\fs27\~operator returns\~\cf33\highlight34\f5\fs20 true\cf32\highlight0\f11\fs27\~if the specified property is deleted, or\~\cf33\highlight34\f5\fs20 false\cf32\highlight0\f11\fs27\~if the property is not deleted.\par

\pard\cbpat12\keep\keepn\widctlpar\s3\sb300\sa150\sl252\slmult1\cf24\expndtw6\f12\fs24 Code\cf0\fs27\par

\pard\cbpat12\widctlpar\sb240\sa240\cf32\expndtw0\f11 In the code below, an object is created and the\~\cf33\highlight34\f5\fs20 delete\cf32\highlight0\f11\fs27\~operator is used to delete some of its properties:\par

\pard\widctlpar\sl285\slmult0\cf35\f5\fs21 let\cf36  human \cf37 =\cf36  \cf37\{\cf36\par
\~ \~ name\cf37 :\cf36  \cf40 "John Doe"\cf37 ,\cf36\par
\~ \~ age\cf37 :\cf36  \cf41 15\cf37 ,\cf36\par
\~ \~ country\cf37 :\cf36  \cf40 "Nigeria"\cf36\par
\cf37\}\cf36\par
\par
\cf35 let\cf36  dog \cf37 =\cf36  \cf37\{\cf36\par
\~ \~ name\cf37 :\cf36  \cf40 "Buddy"\cf37 ,\cf36\par
\~ \~ age\cf37 :\cf36  \cf41 2\cf37 ,\cf36\par
\~ \~ country \cf37 :\cf36  \cf40 "Germany"\cf36\par
\cf37\}\cf36\par
\par
\cf39 // log retured values after delete\cf36\par
console\cf37 .\cf36 log\cf37 (\cf35 delete\cf36  human\cf37 [\cf40 "country"\cf37 ])\cf36  \cf39 // same as human.country\cf36\par
console\cf37 .\cf36 log\cf37 (\cf35 delete\cf36  dog\cf37 .\cf36 country\cf37 )\cf36  \cf39 // same as dog["country"]\cf36\par
\par
\cf39 // log affected objects\cf36\par
console\cf37 .\cf36 log\cf37 (\cf36 human\cf37 )\cf36  \~\cf39 // "country" property deleted\cf36\par
console\cf37 .\cf36 log\cf37 (\cf36 dog\cf37 )\cf36  \~ \~\cf39 // "country" property deleted\cf36\par

\pard\cbpat12\widctlpar\cf1\f1\fs28\par
\b Output\par

\pard\widctlpar\cf0\f0 true \par
true \par
\{ name: 'John Doe', age: 15 \}\par
 \{ name: 'Buddy', age: 2 \}\par

\pard\cbpat12\widctlpar\sb240\sa240\cf32\b0\f11\par

\pard\cbpat12\widctlpar\s2\li360\sb150\sa150\cf0\b\f0\par

\pard\cbpat12\widctlpar\s2\fi-360\li720\sb150\sa150\f3 14.\tab\f0 What are all the types of Pop up boxes available in JavaScript?\par

\pard\cbpat12\widctlpar\s2\li360\sb150\sa150 Ans.\par

\pard\cbpat12\widctlpar\cf2\expndtw2\b0\f4\fs26 In Javascript, popup boxes are used to display the message or notification to the user. There are three types of\~{\cf0\expndtw0\f0\fs24{\field{\*\fldinst{HYPERLINK "https://www.geeksforgeeks.org/javascript-dialogue-boxes/" }}{\fldrslt{\ul\cf5\cf5\expndtw2\ul\f4\fs26 pop-up boxes in JavaScript}}}}\f4\fs26\~namely\b\~Alert Box\b0 ,\b\~Confirm Box\b0\~and\b\~Prompt Box\b0 .\par
\b Alert Box:\b0\~It is used when a warning message is needed to be produced. When the alert box is displayed to the user, the user needs to press ok and proceed.\par
\b Syntax:\b0\~\par

\pard\widctlpar\sa150\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\f5\fs24 alert("your Alert here")\par

\pard\cbpat12\widctlpar\b\f4\fs26 Example: \~\par

\pard\cbpat12{\pntext\f14\'B7\tab}{\*\pn\pnlvlblt\pnf14\pnindent360{\pntxtb\'B7}}\fi-360\li720\fs40 Input:\b0\par

\pard\cbpat12\widctlpar\fs26\par
\trowd\trgaph10\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalb\cellx10433 
\pard\intbl\cbpat12\widctlpar\sl285\slmult0\cf3\expndtw0\f5\fs21 <!DOCTYPE\cf1  \cf4 html\cf3 >\cf1\par
\cf3 <html>\cf1\par
\~\par
\cf3 <head>\cf1\par
\cf3 <meta\cf1  \cf4 charset\cf1 =\cf5\rdblquote UTF-8\rdblquote\cf3 >\cf1\par
\cf3 <meta\cf1  \cf4 Http-equiv\cf1 =\cf5\rdblquote X-UA-Compatible\rdblquote\cf1  \cf4 content\cf1 =\cf5\rdblquote IE\cf6 =\cf5 edge\rdblquote\cf3 >\cf1\par
\cf3 <meta\cf1  \cf4 name\cf1 =\cf5\rdblquote viewport\rdblquote\cf1  \cf4 content\cf1 =\cf5\rdblquote width-device-width,\cf1  \cf4 initial-scale\cf1 =\cf5 1.0\rdblquote\cf3 >\cf1\par
\par
\~ \~ \cf3 <title>\cf1 Pop-up Box type | Alert Box\cf3 </title>\cf1\par
\~ \~ \cf3 <style>\cf1\par
\~ \~ \~ \~ \cf3 h1\cf1\{\par
\~ \~ \~ \~ \~ \~ \cf4 color\cf1 :\cf7 green\cf1 ;\par
\~ \~ \~ \~ \}\par
\~ \~ \cf3 </style>\cf1\par
\cf3 </head>\cf1\par
\~\par
\cf3 <body>\cf1\par
\~ \~ \cf3 <\cf6 center\cf3 >\cf1\par
\~\par
\~ \~ \~ \~ \cf3 <h1>\cf1 Top Technology\cf3 </h1>\cf1\par
\~\par
\~ \~ \~ \~ \cf3 <h3>\cf1 Alert Box\cf3 </h3>\cf1\par
\~ \~ \~ \~ \cf3 <button\cf1  \cf4 onclick\cf1 =\cf5 "topsAlert()"\cf3 >\cf1\par
\~ \~ \~ \~ \~ \~ Click here for alert box\par
\~ \~ \~ \~ \cf3 </button>\cf1\par
\~ \~ \~ \~ \~\par
\~ \~ \~ \~ \cf8 <!-- Alert box function -->\cf1\par
\~ \~ \~ \~ \cf3 <script>\cf1\par
\~ \~ \~ \~ \~ \~ \cf5 function\cf1  topsAlert() \{\par
\~ \~ \~ \~ \~ \~ \~ \~ alert(\cf10 "An Online Computer Science"\cf1\par
\~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ + \cf10 "Portal for Tops"\cf1 );\par
\~ \~ \~ \~ \~ \~ \}\par
\~ \~ \~ \~ \cf3 </script>\cf1\par
\~ \~ \cf3 </\cf6 center\cf3 >\cf1\par
\~ \~\par
\cf3 </body>\cf1\par
\~\par
\cf3 </html>\cf1\par

\pard\intbl\cbpat12\widctlpar\sa240\sl285\slmult0\par

\pard\intbl\cbpat12\widctlpar\sl285\slmult0\cf0\b\fs40 Output:\par
\par
\cf3\b0\fs21\par
\cf1\par

\pard\intbl\cbpat12\widctlpar\sa240\sl285\slmult0\par

\pard\intbl\cbpat12\widctlpar\sa160\sl288\slmult0\cf0\fs25\cell\row 
\pard\cbpat12\widctlpar\cf2\expndtw2\b\f4\fs26 Prompt Box:\b0\~It is a type of pop up box which is used to get the user input for further use. After entering the required details user have to click ok to proceed next stage else by pressing the cancel button user returns the null value.\par
\b Syntax:\b0\~\~\par

\pard\widctlpar\sa150\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\f5\fs24 prompt("your Prompt here")\par

\pard\cbpat12\widctlpar\b\f4\fs26 Example:\~\b0\~\par

\pard\cbpat12{\pntext\f14\'B7\tab}{\*\pn\pnlvlblt\pnf14\pnindent360{\pntxtb\'B7}}\fi-360\li720\b\fs40 Input:\b0\par

\pard\cbpat12\widctlpar\fs26\par
\trowd\trgaph10\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalb\cellx10433 
\pard\intbl\cbpat12\widctlpar\sl285\slmult0\cf3\expndtw0\f5\fs21 <!DOCTYPE\cf1  \cf4 html\cf3 >\cf1\par
\cf3 <html>\cf1\par
\~\par
\cf3 <head>\cf1\par
\cf3 <meta\cf1  \cf4 charset\cf1 =\cf5\rdblquote UTF-8\rdblquote\cf3 >\cf1\par
\cf3 <meta\cf1  \cf4 Http-equiv\cf1 =\cf5\rdblquote X-UA-Compatible\rdblquote\cf1  \cf4 content\cf1 =\cf5\rdblquote IE\cf6 =\cf5 edge\rdblquote\cf3 >\cf1\par
\cf3 <meta\cf1  \cf4 name\cf1 =\cf5\rdblquote viewport\rdblquote\cf1  \cf4 content\cf1 =\cf5\rdblquote width-device-width,\cf1  \cf4 initial-scale\cf1 =\cf5 1.0\rdblquote\cf3 >\cf1\par
\par
\~ \~ \cf3 <title>\cf1\par
\~ \~ \~ \~ Pop-up Box type | Prompt Box\par
\~ \~ \cf3 </title>\cf1\par
\~ \~ \cf3 <style>\cf1\par
\~ \~ \~ \~ \cf3 h1\cf1  \{\par
\~ \~ \~ \~ \~ \~ \cf4 color\cf1 : \cf7 green\cf1 ;\par
\~ \~ \~ \~ \}\par
\~ \~ \cf3 </style>\cf1\par
\cf3 </head>\cf1\par
\~\par
\cf3 <body>\cf1\par
\~ \~\par
\~ \~ \cf3 <\cf6 center\cf3 >\cf1\par
\~\par
\~ \~ \~ \~ \cf3 <h1>\cf1 Top Technology\cf3 </h1>\cf1\par
\~\par
\~ \~ \~ \~ \cf3 <h3>\cf1 Prompt Box\cf3 </h3>\cf1\par
\~\par
\~ \~ \~ \~ \cf3 <input\cf1  \cf4 type\cf1 =\cf5 "button"\cf1  \cf4 onclick\cf1 =\cf5 "topsPrompt();"\cf1\par
\~ \~ \~ \~ \cf4 value\cf1 =\cf5 "Click here for Prompt box"\cf3 />\cf1\par
\~\par
\~ \~ \~ \~ \cf8 <!-- Prompt box function -->\cf1\par
\~ \~ \~ \~ \cf3 <script>\cf1\par
\~ \~ \~ \~ \~ \~ \cf5 function\cf1  topsPrompt() \{\par
\~ \~ \~ \~ \~ \~ \~ \~ \cf5 var\cf1  x = prompt(\cf10 "Enter your mail here : "\cf1 );\par
\~ \~ \~ \~ \~ \~ \~ \~ document.write(\cf10 "Your ID : "\cf1  + x);\par
\~ \~ \~ \~ \~ \~ \}\par
\~ \~ \~ \~ \cf3 </script>\cf1\par
\~ \~ \cf3 </\cf6 center\cf3 >\cf1\par
\~ \~\par
\cf3 </body>\cf1\par
\~\par
\cf3 </html>\cf1\par
\cf0\b\fs40 Output:\par
\cf1\b0\fs21\par

\pard\intbl\cbpat12\widctlpar\sl288\slmult0\cf0\fs25\cell\row 
\pard\cbpat12\widctlpar\cf2\expndtw2\b\f4\fs26 Confirm Box:\b0\~It is a type of pop-up box that is used to get authorization or permission from the user. The user has to press the ok or cancel button to proceed.\par
\b Syntax:\b0\par

\pard\widctlpar\sa150\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\f5\fs24 confirm("your query here")\par

\pard\cbpat12\widctlpar\b\f4\fs26 Example: \~\par

\pard\cbpat12{\pntext\f14\'B7\tab}{\*\pn\pnlvlblt\pnf14\pnindent360{\pntxtb\'B7}}\fi-360\li720\fs40 Input:\b0\par

\pard\cbpat12\widctlpar\fs26\par
\par
\trowd\trgaph10\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalb\cellx10433 
\pard\intbl\cbpat12\widctlpar\sl285\slmult0\cf3\expndtw0\f5\fs21 <!DOCTYPE\cf1  \cf4 html\cf3 >\cf1\par
\cf3 <html>\cf1\par
\~\par
\cf3 <head>\cf1\par
\cf3 <meta\cf1  \cf4 charset\cf1 =\cf5\rdblquote UTF-8\rdblquote\cf3 >\cf1\par
\cf3 <meta\cf1  \cf4 Http-equiv\cf1 =\cf5\rdblquote X-UA-Compatible\rdblquote\cf1  \cf4 content\cf1 =\cf5\rdblquote IE\cf6 =\cf5 edge\rdblquote\cf3 >\cf1\par
\cf3 <meta\cf1  \cf4 name\cf1 =\cf5\rdblquote viewport\rdblquote\cf1  \cf4 content\cf1 =\cf5\rdblquote width-device-width,\cf1  \cf4 initial-scale\cf1 =\cf5 1.0\rdblquote\cf3 >\cf1\par
\par
\~ \~ \cf3 <title>\cf1\par
\~ \~ \~ \~ Pop-up Box type | Confirm Box\par
\~ \~ \cf3 </title>\cf1\par
\~ \~ \cf3 <style>\cf1\par
\~ \~ \~ \~ \cf3 h1\cf1  \{\par
\~ \~ \~ \~ \~ \~ \cf4 color\cf1 : \cf7 green\cf1 ;\par
\~ \~ \~ \~ \}\par
\~ \~ \cf3 </style>\cf1\par
\cf3 </head>\cf1\par
\~\par
\cf3 <body>\cf1\par
\~ \~ \cf3 <\cf6 center\cf3 >\cf1\par
\~\par
\~ \~ \~ \~ \cf3 <h1>\cf1 Top Technology\cf3 </h1>\cf1\par
\~\par
\~ \~ \~ \~ \cf3 <h3>\cf1 Confirm Box\cf3 </h3>\cf1\par
\~\par
\~ \~ \~ \~ \cf3 <button\cf1  \cf4 onclick\cf1 =\cf5 "topsConfirm()"\cf3 >\cf1\par
\~ \~ \~ \~ \~ \~ Click here for Confirm box\par
\~ \~ \~ \~ \cf3 </button>\cf1\par
\~\par
\~ \~ \~ \~ \cf3 <p\cf1  \cf4 id\cf1 =\cf5 "tops"\cf3 ></p>\cf1\par
\~\par
\~\par
\~ \~ \~ \~ \cf8 <!-- Confirm box function -->\cf1\par
\~ \~ \~ \~ \cf3 <script>\cf1\par
\~ \~ \~ \~ \~ \~ \cf5 function\cf1  topsConfirm() \{\par
\~ \~ \~ \~ \~ \~ \~ \~ \cf5 var\cf1  x;\par
\~ \~ \~ \~ \~ \~ \~ \~ \cf5 if\cf1  (confirm(\cf10 "Press a button!"\cf1 ) == \cf5 true\cf1 ) \{\par
\~ \~ \~ \~ \~ \~ \~ \~ \~ \~ x = \cf10 "OK pressed!"\cf1 ;\par
\~ \~ \~ \~ \~ \~ \~ \~ \} \cf5 else\cf1  \{\par
\~ \~ \~ \~ \~ \~ \~ \~ \~ \~ x = \cf10 "Cancel!"\cf1 ;\par
\~ \~ \~ \~ \~ \~ \~ \~ \}\par
\~ \~ \~ \~ \~ \~ \~ \~ document.getElementById(\cf10 "tops"\cf1 ).innerHTML = x;\par
\~ \~ \~ \~ \~ \~ \}\par
\~ \~ \~ \~ \cf3 </script>\cf1\par
\~ \~ \cf3 </\cf6 center\cf3 >\cf1\par
\cf3 </body>\cf1\par
\~\par
\cf3 </html>\par
\cf0\b\fs40 Output:\par
\cf1\b0\fs21\par

\pard\intbl\cbpat12\widctlpar\sl288\slmult0\cf0\fs25\cell\row 
\pard\cbpat12\widctlpar\s2\li360\sb150\sa150\b\f0\fs28\lang1033\par
\par
\par
\lang16393\par

\pard\cbpat12\widctlpar\s2\fi-360\li720\sb150\sa150\f3 15.\tab\f0  What is the use of Void (0)?\par

\pard\cbpat12\widctlpar\s2\sb150\sa150 Ans.\par

\pard\cbpat12\widctlpar\cf2\expndtw2\f4\fs26 Using \ldblquote javascript:void(0);\rdblquote  in anchor tag:\~\b0 Writing \ldblquote javascript:void(0);\rdblquote  in anchor tag can prevent the page to reload and JavaScript functions can be called on single or double clicks easily.\~\b Example:\b0\~\par

\pard\brdrl\brdrs\brdrw15\brsp180 \brdrt\brdrs\brdrw15\brsp160 \brdrr\brdrs\brdrw15\brsp180 \cbpat12\widctlpar\li720\ri180\sa160\sl285\slmult0\fs27 Html\par

\pard\cbpat12\widctlpar\li720\b\fs40 Input:\b0\par

\pard\brdrl\brdrs\brdrw15\brsp180 \brdrt\brdrs\brdrw15\brsp160 \brdrr\brdrs\brdrw15\brsp180 \cbpat12\widctlpar\li720\ri180\sa160\sl285\slmult0\fs27\par
\trowd\trgaph10\trrh6283\trbrdrl\brdrs\brdrw15\brsp180 \trbrdrt\brdrs\brdrw15\brsp160 \trbrdrr\brdrs\brdrw15\brsp180 \trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalb\cellx10433 
\pard\intbl\cbpat12\widctlpar\sl285\slmult0\cf3\expndtw0\f5\fs21 <!DOCTYPE\cf1  \cf4 html\cf3 >\cf1\par
\cf3 <html\cf1  \cf4 lang\cf1 =\cf5\rdblquote en\rdblquote\cf3 >\cf1\par
\~\par
\cf3 <head>\cf1\par
\cf3 <meta\cf1  \cf4 charset\cf1 =\cf5\rdblquote UTF-8\rdblquote\cf3 >\cf1\par
\cf3 <meta\cf1  \cf4 Http-equiv\cf1 =\cf5\rdblquote X-UA-Compatible\rdblquote\cf1  \cf4 content\cf1 =\cf5\rdblquote IE\cf6 =\cf5 edge\rdblquote\cf3 >\cf1\par
\cf3 <meta\cf1  \cf4 name\cf1 =\cf5\rdblquote viewport\rdblquote\cf1  \cf4 content\cf1 =\cf5\rdblquote width-device-width,\cf1  \cf4 initial-scale\cf1 =\cf5 1.0\rdblquote\cf3 >\cf1\par
\cf3 <title>\cf1 JavaScript:void(0)\cf3 </title>\cf1\par
\cf3 </head>\cf1\par
\~\par
\cf3 <body>\cf1\par
\~ \~ \cf3 <\cf6 center\cf3 >\cf1\par
\~ \~ \~ \~ \cf3 <h1\cf1  \cf4 style\cf1 =\cf5 "color:green"\cf3 >\cf1 Top Technology\cf3 </h1>\cf1\par
\~ \~ \~ \~ \cf3 <h3>\cf1 JavaScript:void(0)\cf3 </h3>\cf1\par
\~ \~ \~ \~ \cf8 <!-- doule click start function -->\cf1\par
\~ \~ \~ \~ \cf3 <a\cf1  \cf4 href\cf1 =\cf5 "javascript:void(0);"\cf1\par
\~ \~ \~ \~ \~ \~\cf4 ondblclick\cf1 =\cf5 "alert(\cf10 'Welcome to Tops for Tops'\cf5 )"\cf3 >\cf1\par
Double click on me \cf3 </a>\cf1\par
\~ \~ \cf3 </\cf6 center\cf3 >\cf1\par
\cf3 </body>\cf1\par
\~\par
\cf3 </html>\cf1\par
\par
\cf0\b\fs40 Output:\par

\pard\intbl\cbpat12\widctlpar\li720\sl285\slmult0\cf1\b0\fs21\par
\par

\pard\intbl\cbpat12\widctlpar\li720\sl288\slmult0\cf0\fs25\cell\row 
\pard\cbpat12\widctlpar\cf2\expndtw2\f4\fs26\par

\pard\cbpat12\widctlpar\s2\fi-360\li720\sb150\sa150\cf0\expndtw0\b\f3\fs28 16.\tab\f0  How can a page be forced to load another page in JavaScript?\par

\pard\cbpat12\widctlpar\s2\li360\sb150\sa150 Ans.\par

\pard\cbpat12\widctlpar\cf2\expndtw2\f4\fs26 Step 1:\b0\~Create a file named\~\b\i index.html\b0\i0 . Add a heading and two buttons to it. One button forcefully loads a page with a live URL and the other button loads a local HTML page. In the\~\i <script>\i0\~tag we have two functions, one loads gfg home page, and the second loads a local HTML page using\~\b\i window.location\b0\i0\~property.\par

\pard\brdrl\brdrs\brdrw15\brsp180 \brdrt\brdrs\brdrw15\brsp160 \brdrr\brdrs\brdrw15\brsp180 \cbpat12\widctlpar\li720\ri180\sl285\slmult0\fs27 index.html\par
\b\fs40 Input:\b0\fs27\par
\trowd\trgaph10\trbrdrl\brdrs\brdrw15\brsp180 \trbrdrt\brdrs\brdrw15\brsp160 \trbrdrr\brdrs\brdrw15\brsp180 \trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalb\cellx10433 
\pard\intbl\cbpat12\widctlpar\sl285\slmult0\cf3\expndtw0\f5\fs21 <!DOCTYPE\cf1  \cf4 html\cf3 >\cf1\par
\cf3 <html\cf1  \cf4 lang\cf1 =\cf5 "en"\cf3 >\cf1\par
\par
\~ \par
\cf3 <head>\cf1\par
\~ \~ \cf3 <meta\cf1  \cf4 charset\cf1 =\cf5 "UTF-8"\cf3 >\cf1\par
\~ \~ \cf3 <meta\cf1  \cf4 http-equiv\cf1 =\cf5 "X-UA-Compatible"\cf1\par
\~ \~ \~ \~ \cf4 content\cf1 =\cf5 "IE=edge"\cf3 >\cf1\par
\~ \~ \cf3 <meta\cf1  \cf4 name\cf1 =\cf5 "viewport"\cf1  \cf4 content\cf1 =\par
\~ \~ \~ \~ \cf5 "width=device-width, initial-scale=1.0"\cf3 >\cf1\par
\cf3 </head>\cf1\par
\~ \par
\cf3 <body>\cf1\par
\~ \~ \cf3 <h3>\cf1 This is the original page\cf3 </h3>\cf1\par
\~ \~ \cf3 <br>\cf1\par
\~ \par
\~ \~ \cf3 <button\cf1  \cf4 onclick\cf1 =\cf5 "force_load_top()"\cf3 >\cf1\par
\~ \~ \~ \~ Force Load Top Page\par
\~ \~ \cf3 </button>\cf1\par
\~ \~\cf3 <br><br>\cf1\par
\~ \par
\~ \~ \cf3 <button\cf1  \cf4 onclick\cf1 =\cf5 "force_load_local()"\cf3 >\cf1  \par
\~ \~ \~ \~ Force Load Local HTML page\par
\~ \~ \cf3 </button>\cf1\par
\~ \par
\~ \~ \cf3 <script>\cf1\par
\~ \~ \~ \~ \cf8 // top technologies link page \cf1\par
\~ \~ \~ \~ \cf5 function\cf1  force_load_top() \{\par
\~ \~ \~ \~ \~ \~ window.location = \par
\~ \~ \~ \~ \~ \~ \~ \~ \cf10 "{\cf0{\field{\*\fldinst{HYPERLINK https://www.tops-int.com/ }}{\fldrslt{https://www.tops-int.com/\ul0\cf0}}}}\f5\fs21 "\cf1\par
\~ \~ \~ \~ \}\par
\~ \par
\~ \~ \~ \~ \cf5 function\cf1  force_load_local() \{\par
\~ \~ \~ \~ \~ \~ window.location = \par
\~ \~ \~ \~ \~ \~ \~ \~ \cf10 "F:/top/PageRedirect/newPage.html"\cf1\par
\~ \~ \~ \~ \}\par
\~ \~ \cf3 </script>\cf1\par
\cf3 </body>\cf1\par
\~ \par
\cf3 </html>\cf1\par
\par
\cf0\b\fs40 Output:\par

\pard\intbl\cbpat12\widctlpar\li720\sl285\slmult0\cf1\b0\fs21\par
\cell\row 
\pard\cbpat12\widctlpar\cf2\expndtw2\b\f4\fs26 Step 2:\b0\~Create a file named\~\b\i newPage.html\b0\i0 . This is the local HTML page that would be loaded by Javascript.\par

\pard\brdrl\brdrs\brdrw15\brsp180 \brdrt\brdrs\brdrw15\brsp160 \brdrr\brdrs\brdrw15\brsp180 \cbpat12\widctlpar\li720\ri180\sl285\slmult0\fs27 newPage.html\par
\b\fs40 Input:\b0\fs27\par
\par
\trowd\trgaph10\trbrdrl\brdrs\brdrw15\brsp180 \trbrdrt\brdrs\brdrw15\brsp160 \trbrdrr\brdrs\brdrw15\brsp180 \trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalb\cellx10433 
\pard\intbl\cbpat12\widctlpar\sl285\slmult0\cf3\expndtw0\f5\fs21 <!DOCTYPE\cf1  \cf4 html\cf3 >\cf1\par
\cf3 <html\cf1  \cf4 lang\cf1 =\cf5 "en"\cf3 >\cf1\par
\~ \par
\cf3 <head>\cf1\par
\~ \~ \cf3 <meta\cf1  \cf4 charset\cf1 =\cf5 "UTF-8"\cf3 >\cf1\par
\~ \~ \cf3 <meta\cf1  \cf4 http-equiv\cf1 =\cf5 "X-UA-Compatible"\cf1  \par
\~ \~ \~ \~\cf4 content\cf1 =\cf5 "IE=edge"\cf3 >\cf1\par
\~ \~ \cf3 <meta\cf1  \cf4 name\cf1 =\cf5 "viewport"\cf1  \cf4 content\cf1 =\par
\~ \~ \~ \~ \cf5 "width=device-width, initial-scale=1.0"\cf3 >\cf1\par
\~ \~ \cf3 <title>\cf1  New Page \cf3 </title>\cf1\par
\cf3 </head>\cf1\par
\~ \par
\cf3 <body>\cf1\par
\~ \~ \cf8 <!-- new loaded page -->\cf1\par
\par
\~ \~ \cf3 <h3>\cf1 This is the new loaded page\cf3 </h3>\cf1\par
\cf3 </body>\cf1\par
\~ \par
\cf3 </html>\cf1\par
\par
\cf0\b\fs40 Output:\par

\pard\intbl\cbpat12\widctlpar\li720\sl285\slmult0\cf1\b0\fs21\cell\row 
\pard\cbpat12\widctlpar\s2\li360\sb150\sa150\cf0\b\f0\fs28\par

\pard\cbpat12\widctlpar\s2\fi-360\li720\sb150\sa150\f3 17.\tab\f0  What are the disadvantages of using inner HTML in JavaScript?\par

\pard\cbpat12\widctlpar\s2\li360\sb150\sa150 Ans. \par

\pard\cbpat12\widctlpar\cf2\expndtw2\f4\fs26 Disadvantages of using innerHTML property in JavaScript:\b0\par

\pard\cbpat12{\pntext\f14\'B7\tab}{\*\pn\pnlvlblt\pnf14\pnindent0{\pntxtb\'B7}}\fi-360\li1080\b The use of innerHTML very slow:\b0\~The process of using innerHTML is much slower as its contents as slowly built, also already parsed contents and elements are also re-parsed which takes time.\par
{\pntext\f14\'B7\tab}\b Preserves event handlers attached to any DOM elements:\b0\~The event handlers do not get attached to the new elements created by setting innerHTML automatically. To do so one has to keep track of the event handlers and attach it to new elements manually. This may cause a memory leak on some browsers.\par
{\pntext\f14\'B7\tab}\b Content is replaced everywhere:\b0\~Either you add, append, delete or modify contents on a webpage using innerHTML, all contents is replaced, also all the DOM nodes inside that element are reparsed and recreated.\par
{\pntext\f14\'B7\tab}\b Appending to innerHTML is not supported:\b0\~Usually, += is used for appending in JavaScript. But on appending to an Html tag using innerHTML, the whole tag is re-parsed.\f5\fs24\par
{\pntext\f14\'B7\tab}\b\f4\fs26 Old content replaced issue:\b0\~The old content is replaced even if object.innerHTML = object.innerHTML + \lquote html\rquote  is used instead of object.innerHTML += \lquote html\rquote . There is no way of appending without reparsing the whole innerHTML. Therefore, working with innerHTML becomes very slow. String concatenation just does not scale when dynamic DOM elements need to be created as the plus\rquote  and quote openings and closings becomes difficult to track.\par
{\pntext\f14\'B7\tab}\b Can break the document:\b0\~There is no proper validation provided by innerHTML, so any valid HTML code can be used. This may break the document of JavaScript. Even broken HTML can be used, which may lead to unexpected problems.\par
{\pntext\f14\'B7\tab}\b Can also be used for Cross-site Scripting(XSS):\b0\~The fact that innerHTML can add text and elements to the webpage, can easily be used by malicious users to manipulate and display undesirable or harmful elements within other HTML element tags. Cross-site Scripting may also lead to loss, leak and change of sensitive information.\par

\pard\cbpat12\widctlpar\b Example:\b0\par
\trowd\trgaph10\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalb\cellx10613 
\pard\intbl\cbpat12\widctlpar\sl285\slmult0\cf3\expndtw0\f5\fs21 <!DOCTYPE\cf1  \cf4 html\cf3 >\cf1  \par
\cf3 <html>\cf1  \par
\~ \par
\cf3 <head>\cf1  \par
\cf3 <meta\cf1  \cf4 charset\cf1 =\cf5\rdblquote UTF-8\rdblquote\cf3 >\cf1\par
\cf3 <meta\cf1  \cf4 Http-equiv\cf1 =\cf5\rdblquote X-UA-Compatible\rdblquote\cf1  \cf4 content\cf1 =\cf5\rdblquote IE\cf6 =\cf5 edge\rdblquote\cf3 >\cf1\par
\cf3 <meta\cf1  \cf4 name\cf1 =\cf5\rdblquote viewport\rdblquote\cf1  \cf4 content\cf1 =\cf5\rdblquote width-device-width,\cf1  \cf4 initial-scale\cf1 =\cf5 1.0\rdblquote\cf3 >\cf1\par
\par
\~ \~ \cf3 <title>\cf1\par
\~ \~ \~ \~ Using innerHTML in JavaScript\par
\~ \~ \cf3 </title>\cf1  \par
\cf3 </head>\cf1  \par
\~ \par
\cf3 <body\cf1  \cf4 style\cf1 =\cf5 "text-align: center"\cf3 >\cf1  \par
\~ \~ \~ \par
\~ \~ \cf3 <h1\cf1  \cf4 style\cf1 =\cf5 "color:green"\cf3 >\cf1  \par
\~ \~ \~ \~ Top Technology\par
\~ \~ \cf3 </h1>\cf1  \par
\~ \par
\~ \~ \cf3 <p\cf1  \cf4 id\cf1 =\cf5 "P"\cf3 >\cf1\par
\~ \~ \~ \~ A computer science\par
\~ \~ \~ \~ portal for tops.\par
\~ \~ \cf3 </p>\cf1  \par
\~ \par
\~ \~ \cf3 <button\cf1  \cf4 onclick\cf1 =\cf5 "tops()"\cf3 >\cf1\par
\~ \~ \~ \~ Try it\par
\~ \~ \cf3 </button>\cf1  \par
\~ \par
\~ \~ \cf3 <p\cf1  \cf4 id\cf1 =\cf5 "p"\cf3 ></p>\cf1  \par
\~ \par
\~ \~ \cf3 <script>\cf1  \par
\~ \~ \cf8 // try it function start\cf1\par
\~ \~ \~ \~ \cf5 function\cf1  tops() \{ \par
\~ \~ \~ \~ \~ \~ \cf5 var\cf1  x = document.getElementById(\cf10 "P"\cf1 )\par
\~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ .innerHTML; \par
\~ \~ \~ \~ \~ \~ \~ \par
\~ \~ \~ \~ \~ \~ document.getElementById(\cf10 "p"\cf1 )\par
\~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ .innerHTML = x; \par
\~ \~ \~ \~ \~ \~ \~ \par
\~ \~ \~ \~ \~ \~ document.getElementById(\cf10 "p"\cf1 )\par
\~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ .style.color = \cf10 "green"\cf1 ; \par
\~ \~ \~ \~ \} \par
\~ \~ \cf3 </script>\cf1  \par
\cf3 </body>\cf1  \par
\~ \par
\cf3 </html>\cf1\par
\par
\cf0\b\fs40 Output:\par
\par
\cf3\b0\fs21\par
\par
\cf1\cell\row 
\pard\cbpat12\widctlpar\s2\li360\sb150\sa150\cf0\b\f0\fs28\par

\pard\widctlpar\s2\sb100\sa100 18.\fs36  \fs32 Create password field with show hide functionalities\par
- \par
\b0\fs28 <!DOCTYPE html>\par
<html lang="en">\par
<head>\par
    <meta charset="UTF-8">\par
    <meta http-equiv="X-UA-Compatible" content="IE=edge">\par
    <meta name="viewport" content="width=device-width, initial-scale=1.0">\par
    <title>Document</title>\par
</head>\par
<body>\par
    <form action="">\par
       <table>\par
        <tr>\par
            <td>\par
                <label for="">Enter password:</label>\par
                <input type="password" id="show">\par
            </td>\par
        </tr>\par
        <tr>\par
            <td><input type="checkbox" onclick="name()">show password</td>\par
        </tr>\par
       </table>\par
    </form>\par
    <script>\par
        function name() \{\par
            var show = document.getElementById('show');\par
            if (show.type=='password') \{\par
                show.type='text';\par
            \}\par
            else\{\par
                show.type='password';\par
            \}\par
        \}\par
    </script>\par
</body>\par
</html>\b\par

\pard\sa200\sl276\slmult1\b0\f13\fs22\lang9\par
}
 